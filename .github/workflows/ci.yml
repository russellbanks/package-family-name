name: CI

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        channel: [ stable, beta, nightly ]

    steps:
      - name: Clone repository
        uses: actions/checkout@v5

      - name: Install Rust ${{ matrix.channel }}
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-hack
          channel: ${{ matrix.channel }}

      - name: Test powerset
        run: cargo hack test --feature-powerset --optional-deps

      - name: Publish dry run
        run: cargo publish --dry-run

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install cargo-msrv
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-msrv

      - name: Verify MSRV
        id: verify
        run: cargo msrv verify

      - name: Find actual MSRV
        if: ${{ failure() && steps.verify.conclusion == 'failure' }}
        run: cargo msrv find

  unused_dependencies:
    name: Unused dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install cargo-machete
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-machete

      - name: Check for unused dependencies
        run: cargo machete

  minimal_versions:
    name: Minimal dependency versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install cargo-minimal-versions
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-hack, cargo-minimal-versions

      - name: Add nightly Rust toolchain
        run: rustup toolchain add nightly --profile minimal --no-self-update

      - name: Check minimal versions
        run: cargo minimal-versions check
